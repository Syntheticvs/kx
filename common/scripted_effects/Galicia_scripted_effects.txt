# requires a temp variable WSU_threat_change
GAL_change_WSU_threat = {
	if = {
		limit = { has_active_mission = GAL_WSU_guerilla_activity }
		# convert percent to absolute
		if = {
			limit = {
				check_variable = { WSU_threat_change > -1 }
				check_variable = { WSU_threat_change < 1 }
			}
			multiply_temp_variable = { WSU_threat_change = 100 }
		}

		# tooltip
		effect_tooltip = {
			add_to_variable = {
				UKR_ukrainian_resistance = WSU_threat_change
				tooltip = GAL_WSU_resistance_tooltip
			}
		}

		# lower limit = threat * -1
		set_temp_variable = { GAL_lower_limit = UKR_ukrainian_resistance }
		multiply_temp_variable = { GAL_lower_limit = -1 }

		# upper limit = 100 - threat
		set_temp_variable = { GAL_upper_limit = 100 }
		subtract_from_temp_variable = { GAL_upper_limit = UKR_ukrainian_resistance }

		# avoid values outside the allowed range
		clamp_temp_variable = {
			var = WSU_threat_change
			min = GAL_lower_limit
			max = GAL_upper_limit
		}

		# add the variable
		add_to_variable = { UKR_ukrainian_resistance = WSU_threat_change }

		hidden_effect = {
			if = {
				limit = {
					check_variable = { UKR_ukrainian_resistance < 10 }
					has_country_flag = GAL_finished_centralisation
				}
				country_event = { id = gal.34 days = 1 }
			}
		}
		hidden_effect = {
			if = {
				limit = {
					check_variable = { UKR_ukrainian_resistance > 95 }
				}
				country_event = { id = wsu.2 days = 1 }
			}
		}
	}
}
# requires a temp variable GAL_centralisation_change
GAL_change_centralisation = {
	if = {
		limit = { has_active_mission = GAL_WSU_guerilla_activity }
		# convert percent to absolute
		if = {
			limit = {
				check_variable = { GAL_centralisation_change > -1 }
				check_variable = { GAL_centralisation_change < 1 }
			}
			multiply_temp_variable = { GAL_centralisation_change = 100 }
		}

		# tooltip
		effect_tooltip = {
			add_to_variable = {
				GAL_centralisation = GAL_centralisation_change
				tooltip = GAL_centralisation_tooltip
			}
		}

		# lower limit = legitimacy * -1
		set_temp_variable = { GAL_lower_limit = GAL_centralisation }
		multiply_temp_variable = { GAL_lower_limit = -1 }

		# upper limit = 100 - legitimacy
		set_temp_variable = { GAL_upper_limit = 100 }
		subtract_from_temp_variable = { GAL_upper_limit = GAL_centralisation }

		# avoid values outside the allowed range
		clamp_temp_variable = {
			var = GAL_centralisation_change
			min = GAL_lower_limit
			max = GAL_upper_limit
		}

		# add the variable
		add_to_variable = { GAL_centralisation = GAL_centralisation_change }
	}
}