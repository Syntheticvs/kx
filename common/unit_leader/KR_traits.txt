# leader_traits contain a list of UnitLeaderTrait with the following structure:
# trait_key = {
# 	type = all # or either of field_marshal, corps_commander, navy
#	trait_type = basic_trait # or either of status_trait, personality_trait, assignable_trait, basic_terrain_trait, assignable_terrain_trait, exile
#	attack_skill = 0 # integer
#	defense_skill = 0 # integer
#	logistics_skill = 0 # integer
#	planning_skill = 0 # integer
#	maneuvering_skill = 0 # integer
#	coordination_skill = 0 # integer
#	attack_skill_factor = 0.0 # decimal
#	defense_skill_factor = 0.0 # decimal
#	logistics_skill_factor = 0.0 # decimal
#	planning_skill_factor = 0.0 # decimal
#	maneuvering_skill_factor = 0.0 # decimal
#	coordination_skill_factor = 0.0 # decimal
#	show_in_combat = yes # boolean
#	override_effect_tooltip = "" # loc key
#	custom_effect_tooltip = "" # loc key
#	custom_prerequisite_tooltip = "" # loc key
#	custom_gain_xp_trigger_tooltip = "" # loc key
#	mutually_exclusive = other_trait # trait key
#	parent = { # Can be added multiple times
#		traits = { XXX YYY ZZZ }  # A list of other traits that
#       num_parents_needed = 1 # The number of the above traits that must be true
#   }
#   any_parent = { XXX YYY ZZZ } # shorthand for parent when num_parents_needed are defaulted to 1
#   all_parents = { XXX YYY ZZZ } # shorthand for parent when num_parents_needed are the same as the number of parents
#	gui_row = 0 # integer, starts at 0, unset or -1 means the trait does not appear in unlockable trait tree.
#	gui_column = 0 # integer, starts at 0, unset or -1 means auto
#	allowed = trigger # scope is a unit leader
#	prerequisites = trigger # scope is an unit leader
#	gain_xp = trigger # scope is a combatant
#	gain_xp_leader = trigger # scope is a unit leader. ROOT is country you are from and FROM is any target nationality for agents
#	gain_xp_on_spotting = 0 # integer
#	modifier = { } # list of modifiers
#	non_shared_modifier = {} #
#	corps_commander_modifier = {} #
#	field_marshal_modifier = {} #
#	sub_unit_modifiers = { # list of sub unit def
#		# e.g.
#		submarine {
#			units = {} # list of adjusters
#			# list of modifiers e.g.
#			naval_visibility = -0.1
#		}
#	}
#	trait_xp_factor = {} # list of trait_key/decimal
#	on_add = effect # scope is an unit leader
#	on_remove = effect # scope is an unit leader
#	daily_effect = effect # scope is an unit leader
#	cost = 1000 # integer
#	ai_will_do = {} # weight
#	new_commander_weight = {} # weight
#	enable_ability = ability_key
#}

leader_traits = {

	##
	##	GENERIC
	##

	militias_officer = {
		type = corps_commander
		trait_type = personality_trait

		trait_xp_factor = {
			militias_specialist = 1	#+100%
		}
	}

	militias_specialist = {
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.3 }
			check_variable = { num_militia > temp }
		}
		custom_gain_xp_trigger_tooltip = militia_ratio_over_30

		cost = 1000
		modifier = {
			modifier_army_sub_unit_militia_defence_factor = 0.05
			modifier_army_sub_unit_militia_speed_factor = 0.05
			modifier_army_sub_unit_militia_max_org_factor = 0.05
		}

		ai_will_do = { factor = 1 }

		gui_row = 7
	}

	militias_expert = {
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		modifier = {
			modifier_army_sub_unit_militia_defence_factor = 0.05
			modifier_army_sub_unit_militia_speed_factor = 0.05
			modifier_army_sub_unit_militia_max_org_factor = 0.15
		}

		ai_will_do = { factor = 1 }

		trait_type = assignable_trait
		any_parent = { militias_specialist }
		gui_row = 7
	}
	
	artillery_officer = {
		type = corps_commander
		trait_type = personality_trait

		trait_xp_factor = {
			artillery_specialist = 1	#+100%
		}
	}

	artillery_specialist = {
		type = corps_commander
		gain_xp = {
			set_temp_variable = { temp = num_units }
			multiply_temp_variable = { temp = 0.3 }
			check_variable = { num_artillery > temp }
		}
		custom_gain_xp_trigger_tooltip = artillery_ratio_over_30

		cost = 1000
		modifier = {
			army_artillery_attack_factor = 0.1
		}

		#slot = chief_of_army
		#specialist_advisor_trait = army_artillery_1
		#expert_advisor_trait = army_artillery_2
		#genius_advisor_trait = army_artillery_3

		ai_will_do = { factor = 1 }

		gui_row = 4
	}

	artillery_expert = {
		type = corps_commander
		gain_xp = {
			always = no # not gainable
		}
		cost = 500
		modifier = {
			army_artillery_attack_factor = 0.1
		}

		ai_will_do = { factor = 1 }

		trait_type = assignable_trait
		any_parent = { artillery_specialist }
		gui_row = 4
		mutually_exclusive = fortress_buster
		mutually_exclusive = scavenger
	}

}
