SOV_generate_state_popularities = {
	set_variable = { SOV_state_rkp_popularity = SOV.party_popularity@totalist }
	set_variable = { SOV_state_rsdrp_popularity = SOV.party_popularity@social_democrat }
	set_variable = { SOV_state_psr_popularity = SOV.party_popularity@radical_socialist }
	set_variable = { SOV_state_plsr_popularity = SOV.party_popularity@syndicalist }
	set_variable = { SOV_state_nsp_popularity = SOV.party_popularity@radical_socialist }	
	
	if = {
		limit = {
			RUS = { has_country_flag = rsdrp_banned }
		}
		set_variable = { SOV_state_rsdrp_popularity = 0 }
	}
	if = {
		limit = {
			RUS = { has_country_flag = SOV_nsp_union_with_rsdrp }
		}
		add_to_variable = { SOV_state_nsp_popularity = SOV_state_rsdrp_popularity } 
		set_variable = { SOV_state_rsdrp_popularity = 0 }
	}
	if = {
		limit = {
			RUS = { has_country_flag = rkp_banned }
		}
		set_variable = { SOV_state_rkp_popularity = 0 }
	}
	if = {
		limit = {
			RUS = { has_country_flag = psr_banned }
		}
		set_variable = { SOV_state_psr_popularity = 0 }
	}
	### Fractions ###
	multiply_variable = { SOV_state_nsp_popularity = 0.5 } #nsp
	multiply_variable = { SOV_state_psr_popularity = 0.5 } #psr
	
	
	#Defining temporary state pop variables (to be reset by election)
	set_variable = { SOV_state_rkp_temp_pop = 0 }
	set_variable = { SOV_state_plsr_temp_pop = 0 }
	set_variable = { SOV_state_nsp_temp_pop = 0 }
	set_variable = { SOV_state_psr_temp_pop = 0 }
	set_variable = { SOV_state_rsdrp_temp_pop = 0 }
	
	SOV_generate_special_state_popularities = yes
	
}
SOV_generate_special_state_popularities = {
	
	### Oblastniki Buff ###
	if = {
		limit = {
			is_siberia = yes
		}
		add_to_variable = { SOV_state_psr_popularity = 0.1 }
		multiply_variable = { SOV_state_psr_popularity = 1.1 }
	}
	### Rural Buff ###
	if = {
		limit = {
			OR = {
				has_state_category = four
				has_state_category = three
				has_state_category = two
				has_state_category = one
			}
		}
		add_to_variable = { SOV_state_nsp_popularity = 0.1 }
		multiply_variable = { SOV_state_nsp_popularity = 1.1 }
		add_to_variable = { SOV_state_psr_popularity = 0.15 }
		multiply_variable = { SOV_state_psr_popularity = 1.1 }
		add_to_variable = { SOV_state_plsr_popularity = 0.1 }
		multiply_variable = { SOV_state_plsr_popularity = 1.1 }
	}
	### Urban Buff ###
	if = {
		limit = {
			OR = {
				has_state_category = five
				has_state_category = six
				has_state_category = seven
				has_state_category = eight
				has_state_category = nine
				has_state_category = eleven
				has_state_category = twelve
			}
		}
		add_to_variable = { SOV_state_plsr_popularity = 0.12 }
		multiply_variable = { SOV_state_plsr_popularity = 1.1 }
		add_to_variable = { SOV_state_rsdrp_popularity = 0.12 }
		multiply_variable = { SOV_state_rsdrp_popularity = 1.1 }
	}
	#Adjust for banned parties
	if = {
		limit = {
			RUS = { has_country_flag = rsdrp_banned }
		}
		set_variable = { SOV_state_rsdrp_popularity = 0 }
	}
	if = {
		limit = {
			RUS = { has_country_flag = rkp_banned }
		}
		set_variable = { SOV_state_rkp_popularity = 0 }
	}
	if = {
		limit = {
			RUS = { has_country_flag = psr_banned }
		}
		set_variable = { SOV_state_psr_popularity = 0 }
	}
}
SOV_run_election = {
	set_variable = { SOV_rkp_votes = 0 }
	set_variable = { SOV_plsr_votes = 0 }
	set_variable = { SOV_nsp_votes = 0 }
	set_variable = { SOV_psr_votes = 0 }
	set_variable = { SOV_rsdrp_votes = 0 }
	
	set_variable = { SOV_total_votes = 0 }
	
	every_owned_state = {
		SOV_generate_state_popularities = yes

		set_variable = { SOV_vote_count_state = state_population_k }
		divide_variable = { SOV_vote_count_state = 125 }
		
		set_variable = { SOV_rkp_state_votes = SOV_state_rkp_popularity }
		set_variable = { SOV_plsr_state_votes = SOV_state_plsr_popularity }
		set_variable = { SOV_nsp_state_votes = SOV_state_nsp_popularity }
		set_variable = { SOV_psr_state_votes = SOV_state_psr_popularity }
		set_variable = { SOV_rsdrp_state_votes = SOV_state_rsdrp_popularity }
		
		multiply_variable = { SOV_rkp_state_votes = SOV_vote_count_state }
		multiply_variable = { SOV_plsr_state_votes = SOV_vote_count_state }
		multiply_variable = { SOV_nsp_state_votes = SOV_vote_count_state }
		multiply_variable = { SOV_psr_state_votes = SOV_vote_count_state }
		multiply_variable = { SOV_rsdrp_state_votes = SOV_vote_count_state }
		
		round_variable = SOV_rkp_state_votes
		round_variable = SOV_plsr_state_votes
		round_variable = SOV_nsp_state_votes
		round_variable = SOV_psr_state_votes
		round_variable = SOV_rsdrp_state_votes
		
		if = {
			limit = {
				check_variable = { SOV_plsr_state_votes < 0 }
			}
			set_variable = { SOV_plsr_state_votes = 0 }
		}
		
		if = {
			limit = {
				check_variable = { SOV_rkp_state_votes < 0 }
			}
			set_variable = { SOV_rkp_state_votes = 0 }
		}

		if = {
			limit = {
				check_variable = { SOV_nsp_state_votes < 0 }
			}
			set_variable = { SOV_nsp_state_votes = 0 }
		}

		if = {
			limit = {
				check_variable = { SOV_psr_state_votes < 0 }
			}
			set_variable = { SOV_psr_state_votes = 0 }
		}

		if = {
			limit = {
				check_variable = { SOV_rsdrp_state_votes < 0 }
			}
			set_variable = { SOV_rsdrp_state_votes = 0 }
		}	
		
		set_variable = { SOV_total_state_votes = SOV_plsr_state_votes }
		add_to_variable = { SOV_total_state_votes = SOV_rkp_state_votes }
		add_to_variable = { SOV_total_state_votes = SOV_nsp_state_votes }
		add_to_variable = { SOV_total_state_votes = SOV_psr_state_votes }
		add_to_variable = { SOV_total_state_votes = SOV_rsdrp_state_votes }
		
		add_to_variable = { PREV.SOV_rkp_votes = SOV_rkp_state_votes }
		add_to_variable = { PREV.SOV_plsr_votes = SOV_plsr_state_votes }
		add_to_variable = { PREV.SOV_nsp_votes = SOV_nsp_state_votes }
		add_to_variable = { PREV.SOV_psr_votes = SOV_psr_state_votes }
		add_to_variable = { PREV.SOV_rsdrp_votes = SOV_rsdrp_state_votes }
		
		
		#Resetting temp popularity
		set_variable = { SOV_state_rkp_temp_pop = 0 }
		set_variable = { SOV_state_plsr_temp_pop = 0 }
		set_variable = { SOV_state_nsp_temp_pop = 0 }
		set_variable = { SOV_state_psr_temp_pop = 0 }
		set_variable = { SOV_state_rsdrp_temp_pop = 0 }
		
		log = "[THIS.GetName]: RKP (?SOV_rkp_state_votes]) - PLSR ([?SOV_plsr_state_votes]) - NSP ([?SOV_nsp_state_votes]) - PSR ([?SOV_psr_state_votes]) - RSDRP ([?SOV_rsdrp_state_votes]) - TOTAL VOTES ([?SOV_total_state_votes])"
	}
	round_variable = SOV_rkp_votes
	round_variable = SOV_plsr_votes
	round_variable = SOV_nsp_votes
	round_variable = SOV_psr_votes
	round_variable = SOV_rsdrp_votes
	
	if = {
		limit = {
			RUS = { has_country_flag = psr_banned }
		}
		set_variable = { SOV_psr_votes = 0 }
	}	
	if = {
		limit = {
			RUS = { has_country_flag = rkp_banned }
		}
		set_variable = { SOV_rkp_votes = 0 }
	}	
	if = {
		limit = {
			RUS = { has_country_flag = rsdrp_banned }
		}
		set_variable = { SOV_rsdrp_votes = 0 }
	}
	if = {
		limit = {
			RUS = { has_country_flag = SOV_nsp_union_with_rsdrp }
		}
		set_variable = { SOV_rsdrp_votes = 0 }
	}
	
	add_to_variable = { SOV_total_votes = SOV_rkp_votes }
	add_to_variable = { SOV_total_votes = SOV_plsr_votes }
	add_to_variable = { SOV_total_votes = SOV_nsp_votes }
	add_to_variable = { SOV_total_votes = SOV_psr_votes }
	add_to_variable = { SOV_total_votes = SOV_rsdrp_votes }
	
	set_variable = { SOV_rkp_percentage_vote = SOV_rkp_votes }
	set_variable = { SOV_plsr_percentage_vote = SOV_plsr_votes }
	set_variable = { SOV_nsp_percentage_vote = SOV_nsp_votes }
	set_variable = { SOV_psr_percentage_vote = SOV_psr_votes }
	set_variable = { SOV_rsdrp_percentage_vote = SOV_rsdrp_votes }
	
	divide_variable = { SOV_rkp_percentage_vote = SOV_total_votes }
	divide_variable = { SOV_plsr_percentage_vote = SOV_total_votes }
	divide_variable = { SOV_nsp_percentage_vote = SOV_total_votes }
	divide_variable = { SOV_psr_percentage_vote = SOV_total_votes }
	divide_variable = { SOV_rsdrp_percentage_vote = SOV_total_votes }
	
	multiply_variable = { SOV_rkp_percentage_vote = 100 }
	multiply_variable = { SOV_plsr_percentage_vote = 100 }
	multiply_variable = { SOV_nsp_percentage_vote = 100 }
	multiply_variable = { SOV_psr_percentage_vote = 100 }
	multiply_variable = { SOV_rsdrp_percentage_vote = 100 }
		
	
	round_variable = SOV_total_votes
	log = "[THIS.GetName]: RKP ([?SOV_rkp_votes]) - PLSR([?SOV_plsr_votes]) - NSP([?SOV_nsp_votes]) - RSDRP([?SOV_rsdrp_votes]) - PSR([?SOV_psr_votes]) - TOTAL([?SOV_total_votes])"
}
SOV_increase_bukharin = {
	custom_effect_tooltip = SOV_increase_bukharin_tt
	add_to_variable = { SOV_bukharin_influence = 1 }
}
SOV_decrease_bukharin = {
	custom_effect_tooltip = SOV_decrease_bukharin_tt
	add_to_variable = { SOV_bukharin_influence = -1 }
}
SOV_increase_tomsky = {
	custom_effect_tooltip = SOV_increase_tomsky_tt
	add_to_variable = { SOV_tomsky_influence = 1 }
}
SOV_decrease_tomsky = {
	custom_effect_tooltip = SOV_decrease_tomsky_tt
	add_to_variable = { SOV_tomsky_influence = -1 }
}
SOV_increase_rykov = {
	custom_effect_tooltip = SOV_increase_rykov_tt
	add_to_variable = { SOV_rykov_influence = 1 }
}
SOV_decrease_rykov = {
	custom_effect_tooltip = SOV_decrease_rykov_tt
	add_to_variable = { SOV_rykov_influence = -1 }
}
SOV_increase_kirov = {
	custom_effect_tooltip = SOV_increase_kirov_tt
	add_to_variable = { SOV_kirov_influence = 1 }
}
SOV_decrease_kirov = {
	custom_effect_tooltip = SOV_decrease_kirov_tt
	add_to_variable = { SOV_kirov_influence = -1 }
}
SOV_increase_activist = {
	custom_effect_tooltip = SOV_increase_activists_tt
	add_to_variable = { SOV_activist_influence = 1 }
}
SOV_decrease_activist = {
	custom_effect_tooltip = SOV_decrease_activists_tt
	add_to_variable = { SOV_activist_influence = -1 }
}
SOV_increase_chekist = {
	custom_effect_tooltip = SOV_increase_chekists_tt
	add_to_variable = { SOV_chekist_influence = 1 }
}
SOV_decrease_chekist = {
	custom_effect_tooltip = SOV_decrease_chekists_tt
	add_to_variable = { SOV_chekist_influence = -1 }
}
SOV_increase_legalist = {
	custom_effect_tooltip = SOV_increase_legalists_tt
	add_to_variable = { SOV_legalist_influence = 1 }
}
SOV_decrease_legalist = {
	custom_effect_tooltip = SOV_decrease_legalists_tt
	add_to_variable = { SOV_legalist_influence = -1 }
}
SOV_break_puppet_effect = {
	if = {
		limit = { 
			OR = { 
				has_autonomy_state = kr_autonomous_soviet_republic
				has_autonomy_state = kr_labour_commune
				has_autonomy_state = kr_soviet_republic_not_equal
				has_autonomy_state = kr_soviet_republic_equal
			}
		}
		leave_faction = yes
		overlord = {
			set_temp_variable = { former_overlord = THIS }
			set_autonomy = {
				target = PREV
				autonomy_state = autonomy_free
			}
		}
		peace_out_non_neighbours_after_leaving_faction = yes		
	}
}
SOV_puppet_ROOT_effect = {
	hidden_effect = {
		set_temp_variable = { new_overlord = THIS }
		ROOT = {
			get_current_government_type = yes
			every_subject_country = {
				get_current_government_type = yes
				if = {
					limit = { is_possible_equal_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_soviet_republic_equal
							end_wars = no
						}
					}
				}
				else_if = {
					limit = { is_possible_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_soviet_republic_not_equal
							end_wars = no
						}
					}
				}
				else_if = {
					limit = { is_possible_autonomous_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_autonomous_soviet_republic
							end_wars = no
						}
					}
				}
				restore_previous_government_type = yes
			}
		}
	}
	if = {
		limit = { ROOT = { is_possible_equal_soviet_republic_tag = yes } }
		set_autonomy = {
			target = ROOT
			autonomy_state = kr_soviet_republic_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { ROOT = { is_possible_soviet_republic_tag = yes } }
		set_autonomy = {
			target = ROOT
			autonomy_state = kr_soviet_republic_not_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { ROOT = { is_possible_autonomous_soviet_republic_tag = yes } }
		set_autonomy = {
			target = ROOT
			autonomy_state = kr_autonomous_soviet_republic
			end_wars = no
		}
	}
	hidden_effect = {
		ROOT = { restore_previous_government_type = yes }
	}
}

SOV_puppet_PREV_effect = {
	hidden_effect = {
		set_temp_variable = { new_overlord = THIS }
		PREV = {
			get_current_government_type = yes
			every_subject_country = {
				get_current_government_type = yes
				if = {
					limit = { is_possible_equal_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_soviet_republic_equal
							end_wars = no
						}
					}
				}
				else_if = {
					limit = { is_possible_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_soviet_republic_not_equal
							end_wars = no
						}
					}
				}
				else_if = {
					limit = { is_possible_autonomous_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_autonomous_soviet_republic
							end_wars = no
						}
					}
				}
				restore_previous_government_type = yes
			}
		}
	}
	if = {
		limit = { PREV = { is_possible_equal_soviet_republic_tag = yes } }
		set_autonomy = {
			target = PREV
			autonomy_state = kr_soviet_republic_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { PREV = { is_possible_soviet_republic_tag = yes } }
		set_autonomy = {
			target = PREV
			autonomy_state = kr_soviet_republic_not_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { PREV = { is_possible_autonomous_soviet_republic_tag = yes } }
		set_autonomy = {
			target = PREV
			autonomy_state = kr_autonomous_soviet_republic
			end_wars = no
		}
	}
	hidden_effect = {
		PREV = { restore_previous_government_type = yes }
	}	
}

SOV_puppet_FROM_effect = {
	hidden_effect = {
		set_temp_variable = { new_overlord = THIS }
		FROM = {
			every_subject_country = {
				get_current_government_type = yes
				if = {
					limit = { is_possible_equal_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = var:target
							autonomy_state = kr_soviet_republic_equal
							end_wars = no
						}
					}
				}
				else_if = {
					limit = { is_possible_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = var:target
							autonomy_state = kr_soviet_republic_not_equal
							end_wars = no
						}
					}
				}
				else_if = {
					limit = { is_possible_autonomous_soviet_republic_tag = yes }
					var:new_overlord = {
						set_autonomy = {
							target = PREV
							autonomy_state = kr_autonomous_soviet_republic
							end_wars = no
						}
					}
				}
				restore_previous_government_type = yes
			}
		}
	}
	if = {
		limit = { FROM = { is_possible_equal_soviet_republic_tag = yes } }
		set_autonomy = {
			target = FROM
			autonomy_state = kr_soviet_republic_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { FROM = { is_possible_soviet_republic_tag = yes } }
		set_autonomy = {
			target = FROM
			autonomy_state = kr_soviet_republic_not_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { FROM = { is_possible_autonomous_soviet_republic_tag = yes } }
		set_autonomy = {
			target = FROM
			autonomy_state = kr_autonomous_soviet_republic
			end_wars = no
		}
	}
	hidden_effect = {
		FROM = { restore_previous_government_type = yes }
	}	
}

SOV_puppet_TARGET_effect = {
	hidden_effect = { var:target = { get_current_government_type = yes } }
	if = {
		limit = { var:target = { is_possible_equal_soviet_republic_tag = yes } }
		set_autonomy = {
			target = var:target
			autonomy_state = kr_soviet_republic_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { var:target = { is_possible_soviet_republic_tag = yes } }
		set_autonomy = {
			target = var:target
			autonomy_state = kr_soviet_republic_not_equal
			end_wars = no
		}
	}
	else_if = {
		limit = { var:target = { is_possible_autonomous_soviet_republic_tag = yes } }
		set_autonomy = {
			target = var:target
			autonomy_state = kr_autonomous_soviet_republic
			end_wars = no
		}
	}
	hidden_effect = {
		var:target = { restore_previous_government_type = yes }
	}
}
SOV_integrate_TARGET_effect = {
	set_temp_variable = { integrator = THIS }
	event_target:target = {
		every_subject_country = {
			custom_effect_tooltip = tooltip_white_line
			get_current_government_type = yes
			var:integrator = { puppet = PREV }
			restore_previous_government_type = yes
		}
		every_owned_state = {
			limit = { is_core_of = PREV }
			add_core_of = var:integrator
		}
	}
	custom_effect_tooltip = tooltip_white_line
	if = {
		limit = { event_target:target = { tag = KUB } }
		event_target:target = {
			every_unit_leader = {
				set_unit_leader_flag = KUB_original_leaders
				set_nationality = var:integrator
			}
		}
	}
	else_if = {
		limit = { event_target:target = { tag = TRM } }
		event_target:target = {
			every_unit_leader = {
				set_unit_leader_flag = KUB_original_leaders
				set_nationality = var:integrator
			}
		}
		set_country_flag = RUS_cannot_release_TRM
	}
	
	annex_country = {
		target = event_target:target
		transfer_troops = yes
	}
	if = {
		limit = { event_target:target = { is_ai = no } }
		change_tag_from = event_target:target
	}
}